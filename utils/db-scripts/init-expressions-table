-- Expressions table initial query. 
-- Initial magic-link integration as well, based on nextjs guide @ supabase 
-- https://supabase.com/docs/guides/with-nextjs

--              title: "",
--             textual: "",
--             img_url: "",
--             audio_url: "",
--             mint_now: false,
--             to_be_minted_at: null

-- Create a table for public "expressions"
create table expressions (
  id uuid references auth.users not null,
  updated_at timestamp with time zone,
  contract_id uuid unique,
  content_set_url text,
  website text,
  
  

  primary key (id),
  unique(username),
  constraint username_length check (char_length(username) >= 3)
);

alter table expressions enable row level security;

create policy "Public expressions are viewable by everyone."
  on expressions for select
  using ( true );

create policy "Users can insert their own profile."
  on expressions for insert
  with check ( auth.uid() = id );

create policy "Users can update own profile."
  on expressions for update
  using ( auth.uid() = id );

-- Set up Realtime!
begin;
  drop publication if exists supabase_realtime;
  create publication supabase_realtime;
commit;
alter publication supabase_realtime add table expressions;

-- Set up Storage!
insert into storage.buckets (id, name)
values ('avatars', 'avatars');

create policy "Avatar images are publicly accessible."
  on storage.objects for select
  using ( bucket_id = 'avatars' );

create policy "Anyone can upload an avatar."
  on storage.objects for insert
  with check ( bucket_id = 'avatars' );